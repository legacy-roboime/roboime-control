# Some utilities
#TODO: comment/document

function(directory_source_group ARG0 ARG1 ARG2)
    file(GLOB files "${ARG1}/${ARG2}")
    source_group(${ARG0} FILES ${files})
    set(dirs)
    file(GLOB glob "${ARG1}/*")
    foreach(match ${glob})
        if(IS_DIRECTORY ${match})
            list(APPEND dirs ${match})
        endif()
    endforeach()
    foreach(dir ${dirs})
        string(REGEX MATCH "([^/]*)$" filter ${dir})
        directory_source_group(${ARG0}\\${filter} ${dir} ${ARG2})
    endforeach()
endfunction()

macro(standard_paths ARG0 ARG1 ARG2)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${ARG0}/${ARG1})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${ARG0}/${ARG2})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${ARG0}/${ARG2})
    foreach(OUTPUTCONFIG ${CMAKE_CONFIGURATION_TYPES})
        string(TOUPPER ${OUTPUTCONFIG} OUTPUTCONFIG)
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY})
        set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY})
        set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${OUTPUTCONFIG} ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY})
    endforeach()
    set(CMAKE_DEBUG_POSTFIX d)
    set(CMAKE_MINSIZEREL_POSTFIX min)
endmacro()

macro(standard_config)
    set(CMAKE_AUTOMOC YES)
    set(CMAKE_INCLUDE_CURRENT_DIR YES)
    set_property(GLOBAL PROPERTY USE_FOLDERS ON)
    set_property(GLOBAL PROPERTY PREDEFINED_TARGETS_FOLDER "CMakeTargets")
    set_property(GLOBAL PROPERTY FOLDER generated)

    if(MSVC)
        add_definitions(-DHAVE_WINDOWS)
    endif()

    if(UNIX)
        add_definitions(-DHAVE_UNIX)
        if(APPLE)
            add_definitions(-DHAVE_MACOSX)
        else()
            #TODO: fix this, say we have FreeBSD, that's not linux
            add_definitions(-DHAVE_LINUX)
        endif()
    endif()

endmacro()
